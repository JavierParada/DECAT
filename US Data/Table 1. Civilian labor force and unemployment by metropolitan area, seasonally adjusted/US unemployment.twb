<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xml:base='https://tab.worldbank.org' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='USUnemploymentratebycity' path='/t/WBG/workbooks' revision='1.0' site='WBG' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Placeholder' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Civilian Labor Force&quot;'>
        <calculation class='tableau' formula='&quot;Civilian Labor Force&quot;' />
        <members>
          <member value='&quot;Civilian Labor Force&quot;' />
          <member value='&quot;Employment&quot;' />
          <member value='&quot;Unemployment&quot;' />
          <member value='&quot;Unemployment Rate&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='ssamatab1 (Clean ssamatab)' inline='true' name='federated.0jctyl1182w1p318d7tjp1fxr0t2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clean ssamatab' name='excel-direct.1s6p5gd0icpkdb1bs0k1b1fbpq2s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/WB459082/Documents/DECAT/US Data/Table 1. Civilian labor force and unemployment by metropolitan area, seasonally adjusted/Clean ssamatab.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1s6p5gd0icpkdb1bs0k1b1fbpq2s' name='ssamatab1' table='[ssamatab1$]' type='table'>
          <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='2'>
            <column datatype='string' name='LAUS Code' ordinal='0' />
            <column datatype='string' name='State FIPS Code' ordinal='1' />
            <column datatype='string' name='Area FIPS Code' ordinal='2' />
            <column datatype='string' name='Area' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='integer' name='Month' ordinal='5' />
            <column datatype='integer' name='Civilian Labor Force' ordinal='6' />
            <column datatype='integer' name='Employment' ordinal='7' />
            <column datatype='integer' name='Unemployment' ordinal='8' />
            <column datatype='real' name='Unemployment Rate' ordinal='9' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>LAUS Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LAUS Code]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>LAUS Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State FIPS Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State FIPS Code]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>State FIPS Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area FIPS Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area FIPS Code]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Area FIPS Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Civilian Labor Force</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Civilian Labor Force]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Civilian Labor Force</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employment]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Employment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment Rate]</local-name>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias>Unemployment Rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ssamatab1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J10001:no:A1:J2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City' datatype='string' name='[Area - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Area], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='State' datatype='string' name='[Area - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [Area], &quot;,&quot;, 2 ), &quot;MSA&quot;, 1 ) )' />
      </column>
      <column caption='Date' datatype='date' name='[Calculation_904942069505339392]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([Year],[Month],1)' />
      </column>
      <column caption='Variable' datatype='real' name='[Calculation_904942069511368705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Civilian Labor Force&quot; THEN [Civilian Labor Force]&#13;&#10;WHEN &quot;Employment&quot; THEN [Employment]&#13;&#10;WHEN &quot;Unemployment&quot; THEN [Unemployment]&#13;&#10;WHEN &quot;Unemployment Rate&quot; THEN [Unemployment Rate]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State FIPS Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Area - Split 1]' derivation='None' name='[none:Area - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Area - Split 2]' derivation='None' name='[none:Area - Split 2:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/WB459082/Documents/DECAT/US Data/Table 1. Civilian labor force and unemployment by metropolitan area, seasonally adjusted/ssamatab1 (Clean ssamatab).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/05/2019 06:33:24 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='140184' timestamp-start='2019-08-05 18:33:24.404' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>LAUS Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LAUS Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LAUS Code</remote-alias>
              <ordinal>0</ordinal>
              <family>ssamatab1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>398</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State FIPS Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State FIPS Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State FIPS Code</remote-alias>
              <ordinal>1</ordinal>
              <family>ssamatab1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area FIPS Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area FIPS Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area FIPS Code</remote-alias>
              <ordinal>2</ordinal>
              <family>ssamatab1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>398</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area</remote-alias>
              <ordinal>3</ordinal>
              <family>ssamatab1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>398</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>ssamatab1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>5</ordinal>
              <family>ssamatab1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Civilian Labor Force</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Civilian Labor Force]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Civilian Labor Force</remote-alias>
              <ordinal>6</ordinal>
              <family>ssamatab1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>140184</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Employment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment</remote-alias>
              <ordinal>7</ordinal>
              <family>ssamatab1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>140184</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unemployment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment</remote-alias>
              <ordinal>8</ordinal>
              <family>ssamatab1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15538</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unemployment Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment Rate</remote-alias>
              <ordinal>9</ordinal>
              <family>ssamatab1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>128</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.370277' measure-ordering='alphabetic' measure-percentage='0.450882' parameter-percentage='0.178841' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Area - Split 2:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CT Met NECTA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WI-MN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MN-WI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OH-KY-IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AR-OK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OR-WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VA-WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MA-CT Met NECTA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH Met NECTA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CT-RI Met NECTA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KY-IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ND-MN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RI-MA Met NECTA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IN-KY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VT Met NECTA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IA-IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NY-NJ-PA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ID-WA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OH-PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UT-ID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MD-WV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TN-MS-AR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IN-MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PA-NJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MA-NH Met NECTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NH-ME Met NECTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GA-AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TN-GA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ME Met NECTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TN-VA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IA-NE-SD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TX-AR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DC-VA-MD-WV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WV-KY-OH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NC-SC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PA-NJ-DE-MD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MO-IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GA-SC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MD-DE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TN-KY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MA Met NECTA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NE-IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SC-NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WV-OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AR-MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IL-IN-WI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO-KS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VA-NC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area - Split 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Battle Creek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chicago-Naperville-Elgin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Enid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gettysburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naples-Immokalee-Marco Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pittsfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Youngstown-Warren-Boardman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auburn-Opelika&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloomsburg-Berwick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Coral-Fort Myers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chambersburg-Waynesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corvallis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durham-Chapel Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Florence-Muscle Shoals&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Maria-Santa Barbara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampa-St. Petersburg-Clearwater&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington-Arlington-Alexandria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albany-Schenectady-Troy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltimore-Columbia-Towson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beaumont-Port Arthur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte-Concord-Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dalton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hagerstown-Martinsburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanford-Corcoran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homosassa Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette-West Lafayette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milwaukee-Waukesha-West Allis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York-Newark-Jersey City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Visalia-Porterville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weirton-Steubenville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;California-Lexington Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilton Head Island-Bluffton-Beaufort&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kahului-Wailuku-Lahaina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Las Vegas-Henderson-Paradise&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Bay-Melbourne-Titusville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portland-South Portland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside-San Bernardino-Ontario&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winston-Salem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Augusta-Richmond County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffalo-Cheektowaga-Niagara Falls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas-Fort Worth-Arlington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daphne-Fairhope-Foley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glens Falls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hartford-West Hartford-East Hartford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lansing-East Lansing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little Rock-North Little Rock-Conway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Port-Sarasota-Bradenton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ocean City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bremerton-Silverdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville-Harlingen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elizabethtown-Fort Knox&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grants Pass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hammond&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kokomo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Angeles-Long Beach-Anaheim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minneapolis-St. Paul-Bloomington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niles-Benton Harbor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Juan-Carolina-Caguas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuba City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta-Sandy Springs-Roswell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blacksburg-Christiansburg-Radford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kingsport-Bristol-Bristol&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston-Auburn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Luis Obispo-Paso Robles-Arroyo Grande&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sebring&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sherman-Denison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Utica-Rome&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aguadilla-Isabela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boise City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champaign-Urbana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crestview-Fort Walton Beach-Destin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Stroudsburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenville-Anderson-Mauldin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indianapolis-Carmel-Anderson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Vernon-Anacortes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Bern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shreveport-Bossier City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Villages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Topeka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waterloo-Cedar Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Birmingham-Hoover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carbondale-Marion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fayetteville-Springdale-Rogers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Houma-Thibodaux&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kennewick-Richland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leominster-Gardner&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayaguez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Beach-Conway-North Myrtle Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence-Warwick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco-Oakland-Hayward&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scranton--Wilkes-Barre--Hazleton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Urban Honolulu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barnstable Town&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bridgeport-Stamford-Norwalk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elkhart-Goshen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Huntington-Ashland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Janesville-Beloit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lake Havasu City-Kingman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lakeland-Winter Haven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parkersburg-Vienna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anniston-Oxford-Jacksonville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bend-Redmond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canton-Massillon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cleveland-Elyria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Des Moines-West Des Moines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hinesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalamazoo-Portage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia-Tumwater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portland-Vancouver-Hillsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sacramento--Roseville--Arden-Arcade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Antonio-New Braunfels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vineland-Bridgeton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coeur d&apos;Alene&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Detroit-Warren-Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Rapids-Wyoming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Houston-The Woodlands-Sugar Land&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mankato-North Mankato&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha-Council Bluffs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pensacola-Ferry Pass-Brent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia Beach-Norfolk-Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens-Clarke County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dover-Durham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morgantown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oshkosh-Neenah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo-Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salisbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose-Sunnyvale-Santa Clara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sebastian-Vero Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terre Haute&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City-Hammonton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greensboro-High Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kingston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexington-Fayette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nashville-Davidson--Murfreesboro--Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Cruz-Watsonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seattle-Tacoma-Bellevue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York-Hanover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ames&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse-Onalaska&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ocala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oxnard-Thousand Oaks-Ventura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philadelphia-Camden-Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane-Spokane Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allentown-Bethlehem-Easton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;College Station-Bryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmira&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrisburg-Carlisle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville/Jefferson County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miami-Fort Lauderdale-West Palm Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwich-New London-Westerly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend-Mishawaka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austin-Round Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boston-Cambridge-Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deltona-Daytona Beach-Ormond Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Centro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guayama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macon-Bibb County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan City-La Porte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Vista-Douglas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockton-Lodi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Watertown-Fort Drum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davenport-Moline-Rock Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Killeen-Temple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix-Mesa-Scottsdale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port St. Lucie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego-Carlsbad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beckley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burlington-South Burlington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hickory-Lenoir-Morganton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ogden-Clearfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orlando-Kissimmee-Sanford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rocky Mount&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Staunton-Waynesboro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charleston-North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denver-Aurora-Lakewood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport-Biloxi-Pascagoula&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ithaca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McAllen-Edinburg-Mission&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Muncie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Orleans-Metairie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San German&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vallejo-Fairfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Placeholder' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Civilian Labor Force&quot;'>
          <calculation class='tableau' formula='&quot;Civilian Labor Force&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Metro areas in &lt;</run>
            <run fontcolor='#000000'>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 2:nk]</run>
            <run fontcolor='#000000'>&gt; (&lt;</run>
            <run fontcolor='#000000'>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]</run>
            <run fontcolor='#000000'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ssamatab1 (Clean ssamatab)' name='federated.0jctyl1182w1p318d7tjp1fxr0t2' />
          </datasources>
          <datasource-dependencies datasource='federated.0jctyl1182w1p318d7tjp1fxr0t2'>
            <column caption='City' datatype='string' name='[Area - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Area], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='State' datatype='string' name='[Area - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [Area], &quot;,&quot;, 2 ), &quot;MSA&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[Area]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[Calculation_904942069505339392]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Year],[Month],1)' />
            </column>
            <column datatype='integer' name='[Civilian Labor Force]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Employment]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[Area - Split 2]' derivation='Attribute' name='[attr:Area - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unemployment Rate]' derivation='Avg' name='[avg:Unemployment Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area - Split 1]' derivation='None' name='[none:Area - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Area - Split 2]' derivation='None' name='[none:Area - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Civilian Labor Force]' derivation='Sum' name='[sum:Civilian Labor Force:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Employment]' derivation='Sum' name='[sum:Employment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment]' derivation='Sum' name='[sum:Unemployment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904942069505339392]' derivation='Month-Trunc' name='[tmn:Calculation_904942069505339392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Chicago-Naperville-Elgin&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Dallas-Fort Worth-Arlington&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Houston-The Woodlands-Sugar Land&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Los Angeles-Long Beach-Anaheim&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;New York-Newark-Jersey City&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Philadelphia-Camden-Wilmington&quot;' />
              <groupfilter function='member' level='[none:Area - Split 1:nk]' member='&quot;Washington-Arlington-Alexandria&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 2:nk]'>
            <groupfilter function='level-members' level='[none:Area - Split 2:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]' included-values='in-range-or-null'>
            <min>#2010-12-18 00:00:00#</min>
            <max>#2019-06-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]</column>
            <column>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 2:nk]</column>
            <column>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]' value='320' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]' value='Date'>
              <formatted-text>
                <run>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]' />
              <tooltip column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Civilian Labor Force:qk]' />
              <tooltip column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Employment:qk]' />
              <tooltip column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Unemployment:qk]' />
              <tooltip column='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[attr:Area - Split 2:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>The city of </run>
                <run bold='true'>&lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]&gt;, &lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[attr:Area - Split 2:nk]&gt; </run>
                <run>in</run>
                <run bold='true'> &lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]&gt; </run>
                <run>has</run>
                <run bold='true'> :</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>&lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Employment:qk]&gt; employed + &lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Unemployment:qk]&gt; unemployed = &lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[sum:Civilian Labor Force:qk]&gt; total labor force</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Unemployment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.0jctyl1182w1p318d7tjp1fxr0t2].[avg:Unemployment Rate:qk]&gt;%</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[avg:Unemployment Rate:qk]</rows>
        <cols>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Unemployment rate by city'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ssamatab1 (Clean ssamatab)' name='federated.0jctyl1182w1p318d7tjp1fxr0t2' />
      </datasources>
      <datasource-dependencies datasource='federated.0jctyl1182w1p318d7tjp1fxr0t2'>
        <column caption='City' datatype='string' name='[Area - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
          <calculation class='tableau' formula='TRIM( SPLIT( [Area], &quot;,&quot;, 1 ) )' />
        </column>
        <column caption='State' datatype='string' name='[Area - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[Area]'>
          <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [Area], &quot;,&quot;, 2 ), &quot;MSA&quot;, 1 ) )' />
        </column>
        <column caption='Date' datatype='date' name='[Calculation_904942069505339392]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='MAKEDATE([Year],[Month],1)' />
        </column>
        <column-instance column='[Area - Split 1]' derivation='None' name='[none:Area - Split 1:nk]' pivot='key' type='nominal' />
        <column-instance column='[Area - Split 2]' derivation='None' name='[none:Area - Split 2:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_904942069505339392]' derivation='Month-Trunc' name='[tmn:Calculation_904942069505339392:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='16' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='13' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                <zone h='98000' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                  <zone h='98000' id='9' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                    <zone h='98000' id='6' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                      <zone h='98000' id='4' type='layout-basic' w='97714' x='1143' y='1000'>
                        <zone h='62625' id='1' name='Sheet 1' w='97714' x='1143' y='21000'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone forceUpdate='true' h='9750' id='3' type='text' w='97714' x='1143' y='1000'>
                          <formatted-text>
                            <run bold='true' fontsize='15'>Table 1. Civilian labor force and unemployment by metropolitan area, seasonally adjusted</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='10250' id='7' name='Sheet 1' param='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[tmn:Calculation_904942069505339392:qk]' type='filter' w='67878' x='1143' y='10750'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='5125' id='14' mode='checkdropdown' name='Sheet 1' param='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 2:nk]' type='filter' w='29836' x='69021' y='10750'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='15375' id='17' leg-item-layout='grid' name='Sheet 1' pane-specification-id='8' param='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]' type='color' w='97714' x='1143' y='83625'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='5125' id='20' mode='checkdropdown' name='Sheet 1' param='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]' type='filter' values='relevant' w='29836' x='69021' y='15875'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]</field>
            <field>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 2:nk]</field>
            <field>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[yr:Calculation_904942069505339392:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Unemployment rate by city'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0jctyl1182w1p318d7tjp1fxr0t2].[none:Area - Split 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unemployment rate by city' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
